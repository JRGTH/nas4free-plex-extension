#!/bin/sh
# plexinit.sh
# Created by: J.M Rivera
# Provide: Plex Media Server*
# Require: NAS4Free 10.x and later version.
# *Plex(c) (Plex Media Server) is a registered trademark of Plex(c), Inc.

# Determine current working directory as absolute path.
CWDIR=$(dirname $(realpath $0))

# Global variables.
PLATFORM=`uname -p`
PRODUCT=`uname -i`
PRDVERSION=`uname -r | cut -d. -f1`
PRDPLATFORM=`cat /etc/platform`
SCRIPTNAME=`basename $0`
APPVERSION=`cat ${CWDIR}/version`
APPNAME="Plex Extension"
PKGCACHE="/var/cache/pkg"
PKGMETA="/var/db/pkg"
COMPAT9XPATH1="/usr/local/lib/compat"
COMPAT9XPATH2="/usr/local/lib32/compat"
COMPAT9XPATH3="/usr/local/libdata/ldconfig"
COMPAT9XPATH4="/usr/local/libdata/ldconfig32"
PLEXPATH="/usr/local/share/plexmediaserver"
PLEXRCD="/usr/local/etc/rc.d/plexmediaserver"
PLEXPID="/var/run/plex/plex.pid"
SUPPORTPATH="${CWDIR}/plexdata"
RCDPATH="/usr/local/etc/rc.d"
CONFIG="/cf/conf/config.xml"
PRDNAME="plexmediaserver"
CMDNAME="plexmediaserver"
COMPATPKG="compat9x-amd64"

error_notify()
{
    # Logg and notify message on error and exit.
    logger "${SCRIPTNAME}: an error has occurred during initialize"
    echo -e "$*" >&2 ; exit 1
}

update_freebsdconf()
{
    # Replace old FreeBSD.conf to fetch latest packages.
    if [ -f /etc/pkg/FreeBSD.conf ]; then 
        if /bin/cat "/etc/pkg/FreeBSD.conf" | grep "quarterly" >/dev/null 2>&1; then
            /usr/bin/sed -e "s=quarterly=latest=" /etc/pkg/FreeBSD.conf > /etc/pkg/FreeBSD.conf~
            /bin/mv /etc/pkg/FreeBSD.conf~ /etc/pkg/FreeBSD.conf || error_notify "Error: A problem has occurred while renaming file."
        fi
    fi
}

plex_initial_download()
{
    # Update FreeBSD.conf file.
    update_freebsdconf

    # Check if Plex already exist.
    if [ ! -f ${PLEXPATH}/Plex_Media_Server ]; then
        # Fetch and install latest Plex pkg.
        pkg install -y ${PRDNAME}
    fi

    # Backup latest plex rcd after install if embedded.
    if [ ${PRDPLATFORM} == "x64-embedded" ]; then
        if [ -f ${PLEXRCD} ]; then
            /bin/cp ${PLEXRCD} ${CWDIR}/system/rc.d || error_notify "Error: A problem has occurred while copying file."
        fi
    fi
}

pkg_upgrade()
{
    # Update FreeBSD.conf file.
    update_freebsdconf

    # Check and upgrade latest Plex pkg.
    pkg upgrade -y ${COMPATPKG} ${PRDNAME}

    # Backup latest plex rcd after upgrade if embedded.
    if [ ${PRDPLATFORM} == "x64-embedded" ]; then
        if [ -f ${PLEXRCD} ]; then
            /bin/cp ${PLEXRCD} ${CWDIR}/system/rc.d || error_notify "Error: A problem has occurred while copying file."
        fi
    fi

    # Check and upgrade extension package.
    if [ -f ${CWDIR}/version ]; then
        extenstion_upgrade
    else
        error_notify "Error: A problem has occurred while looking for version file."
    fi
}

extenstion_upgrade()
{
    # Fetch the version file before upgrade.
    /bin/mkdir -p ${CWDIR}/update
    /usr/bin/fetch -o ${CWDIR}/update https://raw.githubusercontent.com/JRGTH/nas4free-plex-extension/testing/plex/version || error_notify "Error: A problem has occurred while fetching version file."

    # Compare the version files and fetch latest version.
    if [ -f ${CWDIR}/update/version ]; then
        UPDATEVER=`cat ${CWDIR}/update/version | tr -d .`
        CURRENTVER=`cat ${CWDIR}/version | tr -d .`
        if [ ${UPDATEVER} -gt ${CURRENTVER} ]; then
            /usr/bin/fetch -o ${CWDIR}/update https://github.com/JRGTH/nas4free-plex-extension/archive/testing.zip || error_notify "Error: A problem has occurred while fetching extension package."
            /usr/bin/tar -xf ${CWDIR}/update/testing.zip --exclude='.git*' --strip-components 1 -C ${CWDIR}/update
            /bin/chmod +x ${CWDIR}/update/plex/plexinit
            /bin/cp -Rf ${CWDIR}/update/plex/* ${CWDIR}/

            # Perform cleanup.
            /bin/rm -R ${CWDIR}/update

            # If gui disabled then remove old folder and rename new, otherwise copy new gui files.
            if [ -d ${CWDIR}/gui-off ]; then
                /bin/rm -R ${CWDIR}/gui-off
                /bin/mv ${CWDIR}/gui ${CWDIR}/gui-off || error_notify "Error: A problem has occurred while renaming folder."
            else
                /bin/cp -R ${CWDIR}/gui/* /usr/local/www/ || error_notify "Error: A problem has occurred while copying extension files."
            fi
        fi
    fi
}

product_check()
{
    # Check for working product.
    if [ ${PRODUCT} == "NAS4FREE-x64" ]; then
        postinit_cmd
        gui_start
    fi
}

platform_check()
{
    # Check for working platform.
    if [ ${PRDPLATFORM} == "x64-embedded" ]; then
        pkg_symlinkdir
        compat9x_symlinkdir
        plex_symlinkdir
    fi
}

postinit_cmd()
{
    # Check and generate temporary php script for plexinit postinit command.
    if ! /usr/bin/grep -q ${CWDIR}/plexinit ${CONFIG}; then
        /usr/bin/touch ${CWDIR}/postinit || error_notify "Error: A problem has occurred while creating postinit file."
        /bin/chmod +x ${CWDIR}/postinit
        /bin/cat << EOF > ${CWDIR}/postinit
<?php
\$cmd = dirname(__FILE__)."/plexinit";
require_once("config.inc");
require_once("functions.inc");
        \$i =0;
        if ( is_array(\$config['rc']['postinit'] ) && is_array( \$config['rc']['postinit']['cmd'] ) ) {
            for (\$i; \$i < count(\$config['rc']['postinit']['cmd']);) {
                if (preg_match('/plexinit/', \$config['rc']['postinit']['cmd'][\$i])) break; ++\$i; }
        }
        \$config['rc']['postinit']['cmd'][\$i] = \$config['cmd']."\$cmd";
        write_config();
?>
EOF
        # Execute temporary php script.
        if [ "${OBI_INSTALL}" != "ON" ]; then 
            /usr/local/bin/php-cgi -f ${CWDIR}/postinit && rm ${CWDIR}/postinit  
        fi
    fi
}

gui_start()
{
    # Check and copy the GUI files.
    if [ -d ${CWDIR}/gui ]; then
        /bin/cp -R ${CWDIR}/gui/* /usr/local/www/ || error_notify "Error: A problem has occurred while copying extension files."
    fi
}

gui_enable()
{
    #  Check and copy the GUI files.
    if [ -d ${CWDIR}/gui-off ]; then
        /bin/mv ${CWDIR}/gui-off ${CWDIR}/gui || error_notify "Error: A problem has occurred while renaming folder."
        /bin/cp -R ${CWDIR}/gui/* /usr/local/www/ || error_notify "Error: A problem has occurred while copying extension files."
    fi
}

gui_disable()
{
    # Disable GUI if -t option specified.
    if [ -d ${CWDIR}/gui ]; then
        /bin/rm -f /usr/local/www/plex-gui.php && /bin/rm -Rf /usr/local/www/ext/plex-gui
        /bin/mv ${CWDIR}/gui ${CWDIR}/gui-off || error_notify "Error: A problem has occurred while renaming folder."
    fi

    # Remove empty ext folder to prevent null "Extensions" tab and unlink locale-plex.
    if ! [ "$(ls -A /usr/local/www/ext)" ]; then
        /bin/rm -r /usr/local/www/ext
        /bin/rm -f /usr/local/share/locale-plex
    fi
}

plex_usergroup()
{
    # Check and create plex user/group.
    if ! /usr/sbin/pw groupshow plex >/dev/null 2>&1; then
        /usr/sbin/pw groupadd plex -g 972 >/dev/null 2>&1
    fi
    if ! /usr/sbin/pw usershow plex >/dev/null 2>&1; then
        /usr/sbin/pw useradd plex -u 972 -g 972  -c "Plex Media Server" -d /nonexistent -s /usr/sbin/nologin >/dev/null 2>&1
    fi
}

pkg_symlinkdir()
{
    # Check and create/relink required symlinks/dirs for pkg cache and metadata.
    if [ -d ${PKGCACHE} ]; then
        /bin/rm -r ${PKGCACHE}
        /bin/mkdir -p ${CWDIR}/system/pkg/pkgcache
        /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgcache ${PKGCACHE}
    else
        /bin/mkdir -m 0755 -p /var/cache
        /bin/mkdir -p ${CWDIR}/system/pkg/pkgcache
        /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgcache ${PKGCACHE}
    fi
    if [ -d ${PKGMETA} ]; then
        /bin/rm -r ${PKGMETA}
        /bin/mkdir -p ${CWDIR}/system/pkg/pkgmeta
        /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgmeta ${PKGMETA}
    else
        /bin/mkdir -p ${CWDIR}/system/pkg/pkgmeta
        /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgmeta ${PKGMETA}
    fi
}

compat9x_symlinkdir()
{
    # Check and create/relink required symlinks/dirs for compat9x libs.
    if [ ! -d ${COMPAT9XPATH1} ]; then
        /bin/mkdir -m 0755 -p /usr/local/lib
        /bin/mkdir -p ${CWDIR}/system/compat9x/lib/compat
        /bin/ln -Ffhs ${CWDIR}/system/compat9x/lib/compat ${COMPAT9XPATH1}
    fi
    if [ ! -d ${COMPAT9XPATH2} ]; then
        /bin/mkdir -m 0755 -p /usr/local/lib32
        /bin/mkdir -p ${CWDIR}/system/compat9x/lib32/compat
        /bin/ln -Ffhs ${CWDIR}/system/compat9x/lib32/compat ${COMPAT9XPATH2}
    fi
    if [ ! -d ${COMPAT9XPATH3} ]; then
        /bin/mkdir -m 0755 -p /usr/local/libdata
        /bin/mkdir -p ${CWDIR}/system/compat9x/libdata/ldconfig
        /bin/ln -Ffhs ${CWDIR}/system/compat9x/libdata/ldconfig ${COMPAT9XPATH3}
    fi
    if [ ! -d ${COMPAT9XPATH4} ]; then
        /bin/mkdir -m 0755 -p /usr/local/libdata
        /bin/mkdir -p ${CWDIR}/system/compat9x/libdata/ldconfig32
        /bin/ln -Ffhs ${CWDIR}/system/compat9x/libdata/ldconfig32 ${COMPAT9XPATH4}
    fi
}

plex_symlinkdir()
{
    # Check and create/relink required symlinks/dirs for plexmediaserver.
    if [ ! -d ${RCDPATH} ]; then
        /bin/mkdir -m 0755 -p ${RCDPATH}
    fi
    if [ -d ${CWDIR}/${PRDNAME} ]; then
        /bin/mv ${CWDIR}/${PRDNAME} ${CWDIR}/system/${PRDNAME}
    fi
    if [ ! -d ${PLEXPATH} ]; then
        /bin/mkdir -p ${CWDIR}/system/${PRDNAME}
        /bin/ln -Ffhs ${CWDIR}/system/${PRDNAME} /usr/local/share
    fi
    if [ ! -d ${CWDIR}/system/rc.d ]; then
        /bin/mkdir -p ${CWDIR}/system/rc.d
    fi
}

plex_rcparamstart()
{
    # Plex Media Server rc parameters.
    /usr/sbin/sysrc ${CMDNAME}_enable="NO" >/dev/null 2>&1
    /usr/sbin/sysrc ${CMDNAME}_support_path="${SUPPORTPATH}" >/dev/null 2>&1
    /usr/sbin/sysrc ${CMDNAME}_maxplugins="6" >/dev/null 2>&1

    # Link plexinit to /usr/local/sbin.
    if [ ! -f /usr/local/sbin/plexinit ]; then
        /bin/ln -fs ${CWDIR}/plexinit /usr/local/sbin
    fi

    # Restore current plex rcd if embedded.
    if [ ${PRDPLATFORM} == "x64-embedded" ]; then
        if [ -f ${CWDIR}/system/rc.d/${CMDNAME} ]; then
            /bin/cp ${CWDIR}/system/rc.d/${CMDNAME} ${RCDPATH} || error_notify "Error: A problem has occurred while copying file."
        fi
    fi

    # Start Plex Media Server.
    if ! /usr/bin/top | grep "plex" >/dev/null 2>&1; then
        service ${CMDNAME} onestart 2> /dev/null || ${PLEXRCD} onestart
    fi
    # Logg on startup success.
    if [ $? -eq 0 ]; then
        logger "${SCRIPTNAME}: script has been started successfully"
    fi
}

plex_init()
{
    # Check for system compatibility.
    if [ ! ${PLATFORM} == "amd64" ]; then
        echo "Unsupported platform!"; exit 1
    fi 
    # Check for product compatibility.
    if [ ! ${PRDVERSION} -ge "10" ]; then
        echo "Unsupported version!"; exit 1
    fi

    # Function calls.
    platform_check
    plex_initial_download
    plex_usergroup
    product_check
    plex_rcparamstart
}

# Plexinit common control switches.
while getopts ":otgsprvuh" option; do
    case ${option} in
        [h]) echo "Usage: ${SCRIPTNAME} -[option]";
        echo "Options:"
        echo "        -s  Start Plex Media Server."
        echo "        -p  Stop Plex Media Server."
        echo "        -r  Restart Plex Media Server."
        echo "        -v  Display product version."
        echo "        -u  Upgrade Plex/Extension packages."
        echo "        -g  Enables the addon GUI."
        echo "        -t  Disable the addon GUI."
        echo "        -h  Display this help message."; exit 0 ;;
        [o]) OBI_INSTALL="ON";; #AFS: To prevent nested PHP-CGI call for installation with OBI.
        [g]) gui_enable;; # For enable the addon gui.
        [t]) gui_disable;; # For disable the addon gui.
        [s]) service ${CMDNAME} onestart 2> /dev/null || ${PLEXRCD} onestart; exit 0 ;;
        [p]) service ${CMDNAME} onestop 2> /dev/null || ${PLEXRCD} onestop && /bin/rm -f ${PLEXPID};  exit 0 ;;
        [r]) service ${CMDNAME} onerestart 2> /dev/null || ${PLEXRCD} onerestart; exit 0 ;;
        [v]) echo "${APPNAME} ${APPVERSION}"; pkg info -I ${PRDNAME}; exit 0 ;;
        [u]) pkg_upgrade; exit 0 ;;
        [?]) echo "Invalid option, -h for usage."; exit 0 ;;
    esac
done

plex_init
